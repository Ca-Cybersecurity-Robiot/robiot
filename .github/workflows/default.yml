name: Build, Quality, Test

on:
    push:
        branches:
            - develop
            - master
            - build
            - prod
            - test
            - QA
            - tma/*
            - fix/*
            - core/*
            - chore/*
            - feature/*
            - format/*
            - refactor/*

jobs:
    job1:
        container:
            image: node:12-alpine

        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                cache-name: cache-node-modules
              with:
                # npm cache files are stored in `~/.npm` on Linux/macOS
                path: ~/.npm
                key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-build-${{ env.cache-name }}-
                  ${{ runner.os }}-build-
                  ${{ runner.os }}-
            - name: Install dependencies
              run: |
                  apk add --no-cache git chromium
                  npm i
              working-directory: ./client
            - name: Lint
              run: npm run lint
              working-directory: ./client
            - name: Check version dependencies
              run: npm run ncu
              working-directory: ./client
            - name: Build
              run: npm run build
              working-directory: ./client
            - name: Run tests
              env:
                CHROME_BIN: /usr/bin/chromium-browser
              run: npm run test
              working-directory: ./client
            - name: Archive production artifacts
              uses: actions/upload-artifact@v2
              with:
                name: dist
                path: ./client/dist
    job2:
        needs: job1
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Download dist result for job 1
              uses: actions/download-artifact@v2
              with:
                name: dist
                path: ./client/dist
            - name: Build the stack
              working-directory: ./client
              run: docker-compose -f docker-compose.yml up -d
            - name: ZAP Scan
              uses: zaproxy/action-baseline@v0.3.0
              with:
                target: 'http://localhost:8082/'
