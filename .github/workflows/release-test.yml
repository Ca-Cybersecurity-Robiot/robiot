name: Build & Zaproxy

on:
  push:
    branches:
      - test
    tags:
      - test/*

jobs:
  build:
    container:
      image: node:12-alpine

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Build
        run: npm run build
        working-directory: ./client
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./client/dist
  zapproxy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          apk add --no-cache git chromium
          npm i
        working-directory: ./client
      - name: Build
        run: npm run build
        working-directory: ./client
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./client/dist
  zaproxy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download dist result for job 1
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./client/dist
      - name: Build the stack
        working-directory: ./client
        run: docker-compose -f docker-compose.yml up -d
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.3.0
        with:
          target: 'http://localhost:8082/'
